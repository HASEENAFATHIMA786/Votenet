CREATE TABLE VOTERS (
    
       NAME   VARCHAR(25)  NOT NULL,
       FATHERNAME  VARCHAR(25) NOT NULL,
       DOB  DATE NOT NULL,
       GENDER  CHAR(1) NOT NULL,
       EMAIL  VARCHAR(35) NOT NULL,
       ADDRESS  VARCHAR(100),
       PHONE VARCHAR(15) NOT NULL,
       CONSTITUENCY INTEGER NOT NULL,
       DEGREE  VARCHAR(10)  DEFAULT NULL,
       ID  INTEGER(8) AUTO_INCREMENT NOT NULL,
       PASSWORD VARCHAR(8) NOT NULL,
       STATUS1 BOOLEAN  DEFAULT 0,
       STATUS2 BOOLEAN  DEFAULT 0,
       CONSTRAINT VOTER_ID_UK  UNIQUE(NAME,FATHERNAME,DOB),
       CONSTRAINT VOTER_ID_PK   PRIMARY KEY(ID),
       CONSTRAINT VOTER_GENDER_CK  CHECK(GENDER  IN ('m','f')),
       CONSTRAINT VOTER_DOB_CK  CHECK (DOB < '1995-01-01'),
       CONSTRAINT VOTER_CONSTIT_CK  CHECK (CONSTITUENCY BETWEEN 1 AND 234),
       CONSTRAINT VOTER_ID_CK CHECK  (ID BETWEEN 1 AND 50000000),
       CONSTRAINT VOTER_CONSTIT_FK  FOREIGN KEY(CONSTITUENCY) REFERENCES  CONSTITUENCY(CONSTITUENCY_NO),
       CONSTRAINT VOTER_PASSWORD_CK  CHECK (LENGTH(PASSWORD) BETWEEN 6 AND 8)
      );


  DELIMITER  $$
  CREATE   PROCEDURE  VOTERS_INSERT 
(IN  NAME  VARCHAR(25) ,
IN FNAME  VARCHAR(25),
IN DOB DATE,
IN GENDER CHAR(1),
IN EMAIL VARCHAR(35),
IN ADDRESS VARCHAR(100),
 IN PHONE  VARCHAR(15),
IN CONSTIT  INTEGER,
IN DEGREE VARCHAR(10),
IN PASSWORD VARCHAR(8),
OUT  ID INTEGER
)

BEGIN 
    INSERT INTO VOTERS (NAME,FATHERNAME,DOB,GENDER,EMAIL,ADDRESS,PHONE,CONSTITUENCY,DEGREE,PASSWORD)  VALUES(UPPER(NAME),UPPER(FNAME),DOB,GENDER,LOWER(EMAIL),ADDRESS,PHONE,CONSTIT,DEGREE,PASSWORD);
   
 SET ID=LAST_INSERT_ID();  
   
END   $$



DROP  PROCEDURE   IF EXISTS  VOTERS_VERIFY;
DELIMITER   $$
CREATE  PROCEDURE  VOTERS_VERIFY(IN  ID1 INTEGER(8),IN CONSTIT  INT (38),OUT  MESSAGE  VARCHAR(25) )
BEGIN
         DECLARE  DONE  INT DEFAULT FALSE;
         DECLARE  C  INT;
         DECLARE STAT  INT DEFAULT 0;
         DECLARE  S  BOOLEAN;
         DECLARE CUR1 CURSOR  FOR SELECT VOTERS.ID,VOTERS.STATUS1 FROM VOTERS WHERE CONSTITUENCY=CONSTIT;
         DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE = TRUE;
          OPEN  CUR1;
         READ_LOOP:LOOP
         FETCH  CUR1  INTO C,S;      
         IF  DONE  THEN
                LEAVE READ_LOOP;
          END IF;
          IF  (C=ID1)   THEN 
                IF ( S=0)  THEN
                     SET  STAT=1;
                      UPDATE VOTERS  SET  STATUS1=1 WHERE  ID=ID1;
                     SET MESSAGE="SUCCESSFULLY  UPDATED";                     
                ELSE             
                      SET  STAT=1;
                     SET  MESSAGE="ALREADY   VERIFIED";
                END IF;
          END  IF;           
          END  LOOP  READ_LOOP;
         IF  (STAT=0)  THEN
                SET MESSAGE="INVALID  VOTER  ID";
          END  IF;
        CLOSE CUR1;
END  $$
 


DROP  PROCEDURE IF EXISTS  VOTERS_UPDATE;
 DELIMITER  $$
   CREATE   PROCEDURE  VOTERS_UPDATE 
(
IN  ID1  INT,
IN EM VARCHAR(35),
IN ADDR VARCHAR(100),
 IN PHON  VARCHAR(15),
IN CONSTIT  INTEGER,
IN DEGRE VARCHAR(10),
IN PASS VARCHAR(8)
)

BEGIN 
    
   UPDATE  VOTERS  SET  EMAIL=EM , ADDRESS=ADDR , PHONE=PHON , CONSTITUENCY=CONSTIT , DEGREE=DEGRE ,PASSWORD=PASS,STATUS1=0  WHERE   ID=ID1;
   
END   $$  

CALL  VOTERS_UPDATE (27,'ko','kl','989',106,'msc','vanathi');           
       