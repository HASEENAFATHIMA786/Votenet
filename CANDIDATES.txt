CREATE  TABLE CANDIDATE
(
    CANDIDATE_ID INT AUTO_INCREMENT,
    VOTER_ID INT(8) NOT NULL,
    PARTY  VARCHAR(25) DEFAULT NULL,
    CONSTIT INT NOT NULL,
    PSYMBOL BIGINT(20) REFERENCES IMAGE(IMGID) ON DELETE CASCADE,
    STATUS BOOLEAN DEFAULT 0,
    COUNT1 INT DEFAULT 0,    
    PASSWORD VARCHAR(8) NOT NULL,
    CONSTRAINT CANDIDATE_ID_PK PRIMARY KEY(CANDIDATE_ID) ,
    CONSTRAINT PARTY_CONSTIT_UK UNIQUE(PARTY,CONSTIT),
    CONSTRAINT CANDIDATE_VID_FK  FOREIGN KEY(VOTER_ID) REFERENCES VOTERS(ID) ON DELETE CASCADE,
    CONSTRAINT CANDIDATE_PARTY_FK  FOREIGN KEY(PARTY) REFERENCES PARTY(NAME) ON DELETE CASCADE,
    CONSTRAINT CANDIDATE_CONSTIT_FK  FOREIGN KEY(CONSTIT) REFERENCES CONSTITUENCY(CONSTITUENCY_NO) ON DELETE CASCADE,   
   CONSTRAINT CANDIDATE_PA_CK  CHECK(LENGTH(PASSWORD) BETWEEN 6 AND 8)
 );

DROP PROCEDURE IF EXISTS CANDIDATE_INSERT;
DELIMITER  $$
CREATE  PROCEDURE  CANDIDATE_INSERT
( 
IN  VOTER_ID INT(8),
IN PARTY VARCHAR(25),
IN CONSTIT INT,
IN PSYMBOL BIGINT(20),
IN PASSWORD VARCHAR(8),
OUT CID INT
)
BEGIN
   INSERT INTO CANDIDATE(VOTER_ID,PARTY,CONSTIT,PSYMBOL,PASSWORD)
VALUES(VOTER_ID,PARTY,CONSTIT,PSYMBOL,PASSWORD);

UPDATE image SET STATUS=1 WHERE ImgID=PSYMBOL;

SET CID=LAST_INSERT_ID();
END $$

CALL CANDIDATE_INSERT(112,NULL,23,1,'123456',@CID);



DROP  PROCEDURE   IF EXISTS  CANDIDATES_VERIFY;
DELIMITER   $$
CREATE  PROCEDURE  CANDIDATES_VERIFY(IN  ID1 INTEGER(8),IN CONSTITUENCY  INT (38),OUT  MESSAGE1  VARCHAR(25) )
BEGIN
         DECLARE  DONE  INT DEFAULT FALSE;
         DECLARE  C  INT;
         DECLARE STAT  INT DEFAULT 0;
         DECLARE  S  BOOLEAN;
         DECLARE CUR2 CURSOR  FOR SELECT CANDIDATE_ID,STATUS FROM CANDIDATE  WHERE CONSTIT=CONSTITUENCY;
         DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE = TRUE;
          OPEN  CUR2;
         READ_LOOP:LOOP
         FETCH  CUR2  INTO C,S;      
         IF  DONE  THEN
                LEAVE READ_LOOP;
          END IF;
          IF  (C=ID1)   THEN 
                IF ( S=0)  THEN
                     SET  STAT=1;
                      UPDATE CANDIDATE SET  STATUS=1 WHERE  CANDIDATE_ID=ID1;
                     SET MESSAGE1="SUCCESSFULLY  UPDATED";                     
                ELSE             
                      SET  STAT=1;
                     SET  MESSAGE1="ALREADY   VERIFIED";
                END IF;
          END  IF;           
          END  LOOP  READ_LOOP;
         IF  (STAT=0)  THEN
                SET MESSAGE1="INVALID  CANDIDATE  ID";
          END  IF;
        CLOSE CUR2;
END  $$





DROP  PROCEDURE   IF EXISTS  VOTE;
DELIMITER  $$
CREATE  PROCEDURE   VOTE (IN VID INTEGER(8),IN CID INTEGER(8))
BEGIN
UPDATE  VOTERS  SET STATUS2=1 WHERE ID=VID;
UPDATE CANDIDATE  SET  COUNT1=COUNT1+1 WHERE CANDIDATE_ID=CID;
END  $$
 
DELIMITER  $$
CREATE   TRIGGER  VOTING  BEFORE  UPDATE  ON   VOTERS 
FOR  EACH  ROW
BEGIN
        IF OLD.STATUS2  THEN
             SET  @MESSAGE2='ALREADY   VOTED';
             DELETE FROM VOTERS WHERE ID=OLD.ID;
        ELSE
              SET  @MESSAGE2='YOU   HAVE   CASTED  YOUR   VOTE';
         END  IF;
END   $$